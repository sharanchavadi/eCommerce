<h2>Sign up</h2>

<%= form_for(resource, as: resource_name, url: registration_path(resource_name)) do |f| %>
  <%= devise_error_messages! %>

  <div class="field">
    <%= f.label :email %><br />
    <%= f.email_field :email, autofocus: true %>
    <p id="emailError"> </p>
  </div>

  <div class="field">
    <%= f.label :username %><br />
    <%= f.text_field :username %>
    <p id="userNameError">  </p>
  </div>

  <div class="field">
    <%= f.label :mobile %><br />
    <%= f.text_field :mobile %>
    <p id="mobileError"></p>
  </div>

  <div class="field">
    <%= f.label :gender %><br />
    <%= f.radio_button :gender , "male" %>Male
    <%= f.radio_button :gender , "female" %>Female
    <p id="genderError"></p>
  </div>

  <div class="field">
    <%= f.label :password %>
    <% if @minimum_password_length %>
    <em>(<%= @minimum_password_length %> characters minimum)</em>
    <% end %><br />
    <%= f.password_field :password, autocomplete: "off" %>
  </div>

  <div class="field">
    <%= f.label :password_confirmation %><br />
    <%= f.password_field :password_confirmation, autocomplete: "off" %>
  </div>

  <div class="actions">
    <%= f.submit "Sign up" ,id:"submit"%>
  </div>
<% end %>

<%= render "devise/shared/links" %>

<script type="text/javascript">
  var emailHandle = document.getElementById('user_email');
  var emailErrorHandle = document.getElementById('emailError');
  var nameHandle = document.getElementById('user_username');
  var nameErrorHandle =  document.getElementById('userNameError');
  var mobileHandle = document.getElementById('user_mobile');
  var mobileErrorHandle = document.getElementById('mobileError');
  var submitHandle = document.getElementById('submit');

  submitHandle.disabled = true; 
  var maleHandle = document.getElementById('user_gender_male');
  var femaleHandle = document.getElementById('user_gender_female');
  var genderErrorHandle = document.getElementById('genderError');
    var validator = {
      password: true ,
      email: false,
      name: false,
      mobile: false
    }
    function enableSubmit() {
      /*var trueCount = 0 ;
      for(var key in validator){
        if (validator[key] == true) {
          trueCount++;
        }
      }
      if (trueCount == Object.keys(validator).length) {
        submitHandle.disabled = false ;
      } else {
        submitHandle.disabled = true;
      }*/
      if (Object.values(validator).includes(false)) {
        submitHandle.disabled = true;
      } else {
        submitHandle.disabled = false;
      }
    }

    function validateEmail(email) {
      var re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
      return re.test(email);
    }
    function validateName(name) {
      var alphaOnly = /^[a-zA-Z]*$/;
      return alphaOnly.test(name);
    }

    function validateMobile(mobile) {
      var numberOnly = /^\d+$/;
      return numberOnly.test(mobile);
    }


  emailHandle.onblur = function(){
    validator.email = false ;
    if (emailHandle.value == "") {
      emailErrorHandle.innerHTML = "cant be blank ";
    } else {
       if (validateEmail(emailHandle.value)){
        var xhr = new XMLHttpRequest();
        xhr.open('GET','/form_validation/email?email_id='+ emailHandle.value);
          xhr.onreadystatechange = function(){
              if (xhr.readyState == 4 && xhr.status ==200){
                var response = JSON.parse(xhr.responseText);
              if (response.success) {
                validator.email = true;
                emailErrorHandle.innerHTML = response.msg;
              } else {
                emailErrorHandle.innerHTML = response.msg ;
              }
            }
          };
          xhr.send();
       }else {
          emailErrorHandle.innerHTML = "Invaild Email id";
       }
    }
    enableSubmit();
  };

  nameHandle.onblur = function(){
    validator.name = false ;
    if (nameHandle.value == "") {
      nameErrorHandle.innerHTML = "Can't be blank";
    } else {
      if (validateName(nameHandle.value)) {
        validator.name = true;
        nameErrorHandle.innerHTML = " ";
        var genderXHR = new XMLHttpRequest();
        genderXHR .open('GET',"https://www.gender-api.com/get?key=pRPLCejozFwCHFbVCR&name=" +nameHandle.value);
        genderXHR.onreadystatechange = function(){
          if (genderXHR.readyState == 4 && genderXHR.status == 200 ) {
            var response =JSON.parse(genderXHR.responseText);
            if (response.gender == "male") {
              maleHandle.checked = true;
            } else if (response.gender == "female"){ 
              femaleHandle.checked = true;
            } else {
              genderErrorHandle.innerHTML = "please select your gender "; 
            }
          }
        }
        genderXHR.send();
      } else {
        nameErrorHandle.innerHTML = "username can cantain only alphabets";  
      }
    }
    enableSubmit();
  };

  mobileHandle.onblur = function() {
    validator.mobile =false;
    if (mobileHandle.value == "") {
      mobileErrorHandle.innerHTML = "Can't be blank";
    } else {
      if (validateMobile(mobileHandle.value)) {
        if (mobileHandle.value.length == 10) {
           mobileErrorHandle.innerHTML = "";
           validator.mobile=true;
        } else {
          mobileErrorHandle.innerHTML = "shld be 10 numbers";
        }
    }else {
      mobileErrorHandle.innerHTML = "can contain only numbers " ;
    }
  }
  enableSubmit();
};
/*var mxhr = new XMLHttpRequest();
          mxhr.open('GET','/form_validation/mobile?mobile='+ mobileHandle.value); 
            mxhr.onreadystatechange = function(){
              if (mxhr.readyState == 4 && mxhr.status ==200){
              var response = JSON.parse(mxhr.responseText);
              if (response.success) {
                mobileErrorHandle.innerHTML = response.msg;
              }else {
                mobileErrorHandle.innerHTML = response.msg ;
              }
            }
          };
          mxhr.send();*/
</script>
